Private Sub Quadratic_Formula()

Dim values As Range
Set values = Selection

values.Cells(1, 1).Offset(1, 0) = values.Cells(1, 1) & "x^2"
values.Cells(1, 2).Offset(1, 0) = values.Cells(1, 2) & "x"
values.Cells(1, 3).Offset(1, 0) = values.Cells(1, 3)

values.Cells(1, 1).Offset(3, 0) = "a"
values.Cells(1, 1).Offset(4, 0) = "b"
values.Cells(1, 1).Offset(5, 0) = "c"

values.Cells(1, 2).Offset(3, 0) = values.Cells(1, 1)
values.Cells(1, 2).Offset(4, 0) = values.Cells(1, 2)
values.Cells(1, 2).Offset(5, 0) = values.Cells(1, 3)

Dim a As Double
Dim b As Double
Dim c As Double

a = values.Cells(1, 1)
b = values.Cells(1, 2)
c = values.Cells(1, 3)

values.Cells(1, 1).Offset(7, 0) = "root1"
values.Cells(1, 1).Offset(8, 0) = "root2"

values.Cells(1, 2).Offset(7, 0) = root1(a, b, c)
values.Cells(1, 2).Offset(8, 0) = root2(a, b, c)

End Sub
Public Function root1(a As Double, b As Double, c As Double) As Double

Dim RootVal As Double
RootVal = (b * b) - (4 * a * c)

If RootVal > 0 Then
root1 = (-b + Sqr(RootVal)) / (2 * a)

ElseIf RootVal = 0 Then
root1 = (-b) / 2 * a

Else
root1 = val("No root")
MsgBox "No roots for these values"
End If

End Function

Public Function root2(a As Double, b As Double, c As Double) As Double

Dim RootVal As Double
RootVal = (b * b) - (4 * a * c)
If RootVal > 0 Then
root2 = (-b + Sqr(RootVal)) / (2 * a)

ElseIf RootVal = 0 Then
root2 = (-b) / 2 * a

Else
root2 = val("No root")
MsgBox "No roots for these values"
End If

End Function

Private Sub Ohms_Law()

Dim numbers As Range
Set numbers = Selection

numbers.Cells(1, 1).Offset(2, 0) = "Voltage"
numbers.Cells(1, 1).Offset(3, 0) = "Resistance"
numbers.Cells(1, 1).Offset(4, 0) = "Ampere"

numbers.Cells(1, 2).Offset(2, 0) = numbers.Cells(1, 1)
numbers.Cells(1, 2).Offset(3, 0) = numbers.Cells(1, 2)
numbers.Cells(1, 2).Offset(4, 0) = numbers.Cells(1, 3)

Dim v As Double
Dim r As Double
Dim i As Double

v = numbers.Cells(1, 1)
r = numbers.Cells(1, 2)
i = numbers.Cells(1, 3)

numbers.Cells(1, 1).Offset(6, 0) = "Voltage"
numbers.Cells(1, 1).Offset(7, 0) = "Resistance"
numbers.Cells(1, 1).Offset(8, 0) = "Amperes"

numbers.Cells(1, 2).Offset(6, 0) = Voltage(r, i)
numbers.Cells(1, 2).Offset(7, 0) = Resistance(v, i)
numbers.Cells(1, 2).Offset(8, 0) = Ampere(v, r)

End Sub

Public Function Voltage(r As Double, i As Double) As Double
    Voltage = r * i
End Function

Public Function Resistance(v As Double, i As Double) As Double
    Resistance = v / i
End Function

Public Function Ampere(v As Double, r As Double) As Double
    Ampere = v / r
End Function

Private Sub Pythagorean()
Dim values As Double

Dim digits As Range
Set digits = Selection

digits.Cells(1, 1).Offset(2, 0) = "a"
digits.Cells(1, 1).Offset(3, 0) = "b"
digits.Cells(1, 1).Offset(4, 0) = "c"

digits.Cells(1, 2).Offset(2, 0) = digits.Cells(1, 1)
digits.Cells(1, 2).Offset(3, 0) = digits.Cells(1, 2)
digits.Cells(1, 2).Offset(4, 0) = digits.Cells(1, 3)

Dim a As Double
Dim b As Double
Dim c As Double

a = digits.Cells(1, 1)
b = digits.Cells(1, 2)
c = digits.Cells(1, 3)

digits.Cells(1, 1).Offset(6, 0) = "A"
digits.Cells(1, 1).Offset(7, 0) = "B"
digits.Cells(1, 1).Offset(8, 0) = "C"

digits.Cells(1, 2).Offset(6, 0) = Apart(b, c)
digits.Cells(1, 2).Offset(7, 0) = Bpart(a, c)
digits.Cells(1, 2).Offset(8, 0) = Cpart(a, b)

End Sub

Public Function Apart(b As Double, c As Double) As Double

Apart = Sqr((c * c) - (b * b))
End Function

Public Function Bpart(a As Double, c As Double) As Double

Bpart = Sqr((c * c) - (a * a))
End Function

Public Function Cpart(a As Double, b As Double) As Double

Cpart = Sqr((a * a) + (b * b))
End Function

